@model MVCEventScheduler.Models.User

@{
    ViewBag.Title = "Edit";

    string UserName = Model.UserName;
}

<h2 class="text-center jumbotron bg-info text-white">Edit User</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-check">
        <h4>@UserName</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
    @*<div class="col-md-offset-2 col-md-10">
        <table>
            <tr>
                @{
                    int cnt = 0;
                    List<MVCEventScheduler.ViewModels.AssignedAttendanceData> attendances = ViewBag.Attendances;

                    foreach (var attendance in attendances)
                    {
                        if (Model.ID == attendance.UserID)
                        {
                            if (cnt++ % 3 == 0)
                            {
                            @:</tr><tr>
                            }
                            @:<td>
                                @*<input type="checkbox"
                            name="selectedCourses"
                            value="@attendance.Status"
                            @Html.DropDownListFor(model => model.Attendances, EnumHelper.GetSelectList(typeof(MVCEventScheduler.Models.Status)), htmlAttributes: new { @class = "form-control" }) />*@
                                @*@attendance.EventID @: 
                                @Html.LabelFor(model => attendance.Status)
                                <div class="col-md-10">
                                    @Html.DropDownListFor(model => attendance.Status, EnumHelper.GetSelectList(typeof(MVCEventScheduler.Models.Status)), htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => attendance.Status, "", new { @class = "text-danger" })
                                </div>
                            @:</td>








                        }

                    }
                @:</tr>
                }
            </table>
    </div>*@
</div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
